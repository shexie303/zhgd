<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: event_dis.proto

namespace Event;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 *&#64;基本事件日志消息结构体
 *
 * Generated from protobuf message <code>event.CommEventLog</code>
 */
class CommEventLog extends \Google\Protobuf\Internal\Message
{
    /**
     *日志Id，唯一标识一次发生的事件
     *
     * Generated from protobuf field <code>string log_id = 1;</code>
     */
    private $log_id = '';
    /**
     *事件状态，事件状态为开始或者瞬时时保存事件，状态为结束时更新日志结束时间，状态为更新时保存联动结果
     *
     * Generated from protobuf field <code>int32 event_state = 2;</code>
     */
    private $event_state = 0;
    /**
     *事件等级
     *
     * Generated from protobuf field <code>int32 event_level = 3;</code>
     */
    private $event_level = 0;
    /**
     *控制中心编号
     *
     * Generated from protobuf field <code>string unit_idx = 4;</code>
     */
    private $unit_idx = '';
    /**
     *事件类型
     *
     * Generated from protobuf field <code>int32 event_type = 5;</code>
     */
    private $event_type = 0;
    /**
     *事件类型名称
     *
     * Generated from protobuf field <code>string event_type_name = 6;</code>
     */
    private $event_type_name = '';
    /**
     *事件所属子系统类型，废弃，事件整改，没有子系统属性了2015-10-28 13:45:13
     *
     * Generated from protobuf field <code>int32 sub_sys_type = 7;</code>
     */
    private $sub_sys_type = 0;
    /**
     *事件名称
     *
     * Generated from protobuf field <code>string event_name = 8;</code>
     */
    private $event_name = '';
    /**
     *开始时间
     *
     * Generated from protobuf field <code>string start_time = 9;</code>
     */
    private $start_time = '';
    /**
     *结束时间
     *
     * Generated from protobuf field <code>string stop_time = 10;</code>
     */
    private $stop_time = '';
    /**
     *事件源编号
     *
     * Generated from protobuf field <code>string source_idx = 11;</code>
     */
    private $source_idx = '';
    /**
     *事件源类型
     *
     * Generated from protobuf field <code>int32 source_type = 12;</code>
     */
    private $source_type = 0;
    /**
     *事件源名称
     *
     * Generated from protobuf field <code>string source_name = 13;</code>
     */
    private $source_name = '';
    /**
     *事件描述信息
     *
     * Generated from protobuf field <code>string log_txt = 14;</code>
     */
    private $log_txt = '';
    /**
     *事件源区域编号，可选
     *
     * Generated from protobuf field <code>string region_idx = 15;</code>
     */
    private $region_idx = '';
    /**
     *事件扩展信息,各个子系统根据子系统的消息结构体定义解析
     *
     * Generated from protobuf field <code>bytes ext_info = 20;</code>
     */
    private $ext_info = '';
    /**
     *事件接收的User Id数组,用于日志查询权限控制
     *
     * Generated from protobuf field <code>int32 user_id = 21;</code>
     */
    private $user_id = 0;
    /**
     *事件处理结果，当event_state为更新时使用
     *
     * Generated from protobuf field <code>.event.TriggerResult rslt_msg = 33;</code>
     */
    private $rslt_msg = null;
    /**
     *联动信息，目前包含客户端联动、预案     
     *
     * Generated from protobuf field <code>.event.CommEventTrig trig_info = 34;</code>
     */
    private $trig_info = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $log_id
     *          日志Id，唯一标识一次发生的事件
     *     @type int $event_state
     *          事件状态，事件状态为开始或者瞬时时保存事件，状态为结束时更新日志结束时间，状态为更新时保存联动结果
     *     @type int $event_level
     *          事件等级
     *     @type string $unit_idx
     *          控制中心编号
     *     @type int $event_type
     *          事件类型
     *     @type string $event_type_name
     *          事件类型名称
     *     @type int $sub_sys_type
     *          事件所属子系统类型，废弃，事件整改，没有子系统属性了2015-10-28 13:45:13
     *     @type string $event_name
     *          事件名称
     *     @type string $start_time
     *          开始时间
     *     @type string $stop_time
     *          结束时间
     *     @type string $source_idx
     *          事件源编号
     *     @type int $source_type
     *          事件源类型
     *     @type string $source_name
     *          事件源名称
     *     @type string $log_txt
     *          事件描述信息
     *     @type string $region_idx
     *          事件源区域编号，可选
     *     @type string $ext_info
     *          事件扩展信息,各个子系统根据子系统的消息结构体定义解析
     *     @type int $user_id
     *          事件接收的User Id数组,用于日志查询权限控制
     *     @type \Event\TriggerResult $rslt_msg
     *          事件处理结果，当event_state为更新时使用
     *     @type \Event\CommEventTrig $trig_info
     *          联动信息，目前包含客户端联动、预案     
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\EventDis::initOnce();
        parent::__construct($data);
    }

    /**
     *日志Id，唯一标识一次发生的事件
     *
     * Generated from protobuf field <code>string log_id = 1;</code>
     * @return string
     */
    public function getLogId()
    {
        return $this->log_id;
    }

    /**
     *日志Id，唯一标识一次发生的事件
     *
     * Generated from protobuf field <code>string log_id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setLogId($var)
    {
        GPBUtil::checkString($var, True);
        $this->log_id = $var;

        return $this;
    }

    /**
     *事件状态，事件状态为开始或者瞬时时保存事件，状态为结束时更新日志结束时间，状态为更新时保存联动结果
     *
     * Generated from protobuf field <code>int32 event_state = 2;</code>
     * @return int
     */
    public function getEventState()
    {
        return $this->event_state;
    }

    /**
     *事件状态，事件状态为开始或者瞬时时保存事件，状态为结束时更新日志结束时间，状态为更新时保存联动结果
     *
     * Generated from protobuf field <code>int32 event_state = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setEventState($var)
    {
        GPBUtil::checkInt32($var);
        $this->event_state = $var;

        return $this;
    }

    /**
     *事件等级
     *
     * Generated from protobuf field <code>int32 event_level = 3;</code>
     * @return int
     */
    public function getEventLevel()
    {
        return $this->event_level;
    }

    /**
     *事件等级
     *
     * Generated from protobuf field <code>int32 event_level = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setEventLevel($var)
    {
        GPBUtil::checkInt32($var);
        $this->event_level = $var;

        return $this;
    }

    /**
     *控制中心编号
     *
     * Generated from protobuf field <code>string unit_idx = 4;</code>
     * @return string
     */
    public function getUnitIdx()
    {
        return $this->unit_idx;
    }

    /**
     *控制中心编号
     *
     * Generated from protobuf field <code>string unit_idx = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setUnitIdx($var)
    {
        GPBUtil::checkString($var, True);
        $this->unit_idx = $var;

        return $this;
    }

    /**
     *事件类型
     *
     * Generated from protobuf field <code>int32 event_type = 5;</code>
     * @return int
     */
    public function getEventType()
    {
        return $this->event_type;
    }

    /**
     *事件类型
     *
     * Generated from protobuf field <code>int32 event_type = 5;</code>
     * @param int $var
     * @return $this
     */
    public function setEventType($var)
    {
        GPBUtil::checkInt32($var);
        $this->event_type = $var;

        return $this;
    }

    /**
     *事件类型名称
     *
     * Generated from protobuf field <code>string event_type_name = 6;</code>
     * @return string
     */
    public function getEventTypeName()
    {
        return $this->event_type_name;
    }

    /**
     *事件类型名称
     *
     * Generated from protobuf field <code>string event_type_name = 6;</code>
     * @param string $var
     * @return $this
     */
    public function setEventTypeName($var)
    {
        GPBUtil::checkString($var, True);
        $this->event_type_name = $var;

        return $this;
    }

    /**
     *事件所属子系统类型，废弃，事件整改，没有子系统属性了2015-10-28 13:45:13
     *
     * Generated from protobuf field <code>int32 sub_sys_type = 7;</code>
     * @return int
     */
    public function getSubSysType()
    {
        return $this->sub_sys_type;
    }

    /**
     *事件所属子系统类型，废弃，事件整改，没有子系统属性了2015-10-28 13:45:13
     *
     * Generated from protobuf field <code>int32 sub_sys_type = 7;</code>
     * @param int $var
     * @return $this
     */
    public function setSubSysType($var)
    {
        GPBUtil::checkInt32($var);
        $this->sub_sys_type = $var;

        return $this;
    }

    /**
     *事件名称
     *
     * Generated from protobuf field <code>string event_name = 8;</code>
     * @return string
     */
    public function getEventName()
    {
        return $this->event_name;
    }

    /**
     *事件名称
     *
     * Generated from protobuf field <code>string event_name = 8;</code>
     * @param string $var
     * @return $this
     */
    public function setEventName($var)
    {
        GPBUtil::checkString($var, True);
        $this->event_name = $var;

        return $this;
    }

    /**
     *开始时间
     *
     * Generated from protobuf field <code>string start_time = 9;</code>
     * @return string
     */
    public function getStartTime()
    {
        return $this->start_time;
    }

    /**
     *开始时间
     *
     * Generated from protobuf field <code>string start_time = 9;</code>
     * @param string $var
     * @return $this
     */
    public function setStartTime($var)
    {
        GPBUtil::checkString($var, True);
        $this->start_time = $var;

        return $this;
    }

    /**
     *结束时间
     *
     * Generated from protobuf field <code>string stop_time = 10;</code>
     * @return string
     */
    public function getStopTime()
    {
        return $this->stop_time;
    }

    /**
     *结束时间
     *
     * Generated from protobuf field <code>string stop_time = 10;</code>
     * @param string $var
     * @return $this
     */
    public function setStopTime($var)
    {
        GPBUtil::checkString($var, True);
        $this->stop_time = $var;

        return $this;
    }

    /**
     *事件源编号
     *
     * Generated from protobuf field <code>string source_idx = 11;</code>
     * @return string
     */
    public function getSourceIdx()
    {
        return $this->source_idx;
    }

    /**
     *事件源编号
     *
     * Generated from protobuf field <code>string source_idx = 11;</code>
     * @param string $var
     * @return $this
     */
    public function setSourceIdx($var)
    {
        GPBUtil::checkString($var, True);
        $this->source_idx = $var;

        return $this;
    }

    /**
     *事件源类型
     *
     * Generated from protobuf field <code>int32 source_type = 12;</code>
     * @return int
     */
    public function getSourceType()
    {
        return $this->source_type;
    }

    /**
     *事件源类型
     *
     * Generated from protobuf field <code>int32 source_type = 12;</code>
     * @param int $var
     * @return $this
     */
    public function setSourceType($var)
    {
        GPBUtil::checkInt32($var);
        $this->source_type = $var;

        return $this;
    }

    /**
     *事件源名称
     *
     * Generated from protobuf field <code>string source_name = 13;</code>
     * @return string
     */
    public function getSourceName()
    {
        return $this->source_name;
    }

    /**
     *事件源名称
     *
     * Generated from protobuf field <code>string source_name = 13;</code>
     * @param string $var
     * @return $this
     */
    public function setSourceName($var)
    {
        GPBUtil::checkString($var, True);
        $this->source_name = $var;

        return $this;
    }

    /**
     *事件描述信息
     *
     * Generated from protobuf field <code>string log_txt = 14;</code>
     * @return string
     */
    public function getLogTxt()
    {
        return $this->log_txt;
    }

    /**
     *事件描述信息
     *
     * Generated from protobuf field <code>string log_txt = 14;</code>
     * @param string $var
     * @return $this
     */
    public function setLogTxt($var)
    {
        GPBUtil::checkString($var, True);
        $this->log_txt = $var;

        return $this;
    }

    /**
     *事件源区域编号，可选
     *
     * Generated from protobuf field <code>string region_idx = 15;</code>
     * @return string
     */
    public function getRegionIdx()
    {
        return $this->region_idx;
    }

    /**
     *事件源区域编号，可选
     *
     * Generated from protobuf field <code>string region_idx = 15;</code>
     * @param string $var
     * @return $this
     */
    public function setRegionIdx($var)
    {
        GPBUtil::checkString($var, True);
        $this->region_idx = $var;

        return $this;
    }

    /**
     *事件扩展信息,各个子系统根据子系统的消息结构体定义解析
     *
     * Generated from protobuf field <code>bytes ext_info = 20;</code>
     * @return string
     */
    public function getExtInfo()
    {
        return $this->ext_info;
    }

    /**
     *事件扩展信息,各个子系统根据子系统的消息结构体定义解析
     *
     * Generated from protobuf field <code>bytes ext_info = 20;</code>
     * @param string $var
     * @return $this
     */
    public function setExtInfo($var)
    {
        GPBUtil::checkString($var, False);
        $this->ext_info = $var;

        return $this;
    }

    /**
     *事件接收的User Id数组,用于日志查询权限控制
     *
     * Generated from protobuf field <code>int32 user_id = 21;</code>
     * @return int
     */
    public function getUserId()
    {
        return $this->user_id;
    }

    /**
     *事件接收的User Id数组,用于日志查询权限控制
     *
     * Generated from protobuf field <code>int32 user_id = 21;</code>
     * @param int $var
     * @return $this
     */
    public function setUserId($var)
    {
        GPBUtil::checkInt32($var);
        $this->user_id = $var;

        return $this;
    }

    /**
     *事件处理结果，当event_state为更新时使用
     *
     * Generated from protobuf field <code>.event.TriggerResult rslt_msg = 33;</code>
     * @return \Event\TriggerResult
     */
    public function getRsltMsg()
    {
        return $this->rslt_msg;
    }

    /**
     *事件处理结果，当event_state为更新时使用
     *
     * Generated from protobuf field <code>.event.TriggerResult rslt_msg = 33;</code>
     * @param \Event\TriggerResult $var
     * @return $this
     */
    public function setRsltMsg($var)
    {
        GPBUtil::checkMessage($var, \Event\TriggerResult::class);
        $this->rslt_msg = $var;

        return $this;
    }

    /**
     *联动信息，目前包含客户端联动、预案     
     *
     * Generated from protobuf field <code>.event.CommEventTrig trig_info = 34;</code>
     * @return \Event\CommEventTrig
     */
    public function getTrigInfo()
    {
        return $this->trig_info;
    }

    /**
     *联动信息，目前包含客户端联动、预案     
     *
     * Generated from protobuf field <code>.event.CommEventTrig trig_info = 34;</code>
     * @param \Event\CommEventTrig $var
     * @return $this
     */
    public function setTrigInfo($var)
    {
        GPBUtil::checkMessage($var, \Event\CommEventTrig::class);
        $this->trig_info = $var;

        return $this;
    }

}

